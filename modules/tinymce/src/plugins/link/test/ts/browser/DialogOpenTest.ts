import { describe, it } from '@ephox/bedrock-client';
import { PlatformDetection } from '@ephox/sand';
import { TinyHooks, TinyUiActions, TinyContentActions } from '@ephox/wrap-mcagar';

import Editor from 'tinymce/core/api/Editor';
import Plugin from 'tinymce/plugins/link/Plugin';

describe('browser.tinymce.plugins.link.DialogButtonTest', () => {
  const hook = TinyHooks.bddSetup<Editor>({
    plugins: 'link',
    toolbar: 'link',
    base_url: '/project/tinymce/js/tinymce',
  }, [ Plugin ]);

  const metaKey = PlatformDetection.detect().os.isMacOS() ? { metaKey: true } : { ctrlKey: true };

  const pDialogCheck = async (editor: Editor) => {
    await TinyUiActions.pWaitForDialog(editor);
    TinyUiActions.closeDialog(editor);
  };

  const pTestOpenBothDialog = async (editor: Editor) => {
    TinyUiActions.clickOnMenu(editor, 'button:contains("Insert")');
    await TinyUiActions.pWaitForUi(editor, '[role="menu"]');
    TinyUiActions.clickOnUi(editor, `[role="menu"] [title="Link..."]`);
    await pDialogCheck(editor);
    TinyUiActions.clickOnToolbar(editor, 'div.tox-toolbar__group > button');
    await pDialogCheck(editor);
  };

  it('TINY-8057: Checking dialog opens from toolbar and menu', async () => {
    const editor = hook.editor();
    editor.setContent('');
    await pTestOpenBothDialog(editor);
  });

  it('TINY-8057: Checking dialog opens from toolbar and menu with quicklink enabled', async () => {
    const editor = hook.editor();
    editor.setContent('');
    editor.options.set('link_quicklink', true);
    await pTestOpenBothDialog(editor);
    editor.options.unset('link_quicklink');
  });

  it('TINY-8057: Checking dialog opens from keyboard shortcut', async () => {
    const editor = hook.editor();
    editor.setContent('');
    TinyContentActions.keystroke(editor, 'K'.charCodeAt(0), metaKey);
    await pDialogCheck(editor);
  });
});
